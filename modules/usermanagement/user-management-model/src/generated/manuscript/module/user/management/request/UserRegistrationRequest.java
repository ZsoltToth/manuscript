//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.04.15 at 12:08:20 PM CEST 
//


package manuscript.module.user.management.request;

import java.util.ArrayList;
import java.util.List;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import manuscript.module.user.management.bean.AcademicDisciplines;
import manuscript.module.user.management.bean.Password;
import manuscript.module.user.management.bean.User;


/**
 * <p>Java class for userRegistrationRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="userRegistrationRequest"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="User" type="{http://manuscript/module/user/management/bean}user"/&gt;
 *         &lt;element name="Password" type="{http://manuscript/module/user/management/bean}password"/&gt;
 *         &lt;element name="AcademicDisciplines" type="{http://manuscript/module/user/management/bean}academicDisciplines" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "userRegistrationRequest", propOrder = {
    "user",
    "password",
    "academicDisciplines"
})
public class UserRegistrationRequest {

    @XmlElement(name = "User", required = true)
    @NotNull
    @Valid
    protected User user;
    @XmlElement(name = "Password", required = true)
    @NotNull
    @Valid
    protected Password password;
    @XmlElement(name = "AcademicDisciplines", required = true)
    @NotNull
    @Size(min = 1)
    @Valid
    protected List<AcademicDisciplines> academicDisciplines;

    /**
     * Gets the value of the user property.
     * 
     * @return
     *     possible object is
     *     {@link User }
     *     
     */
    public User getUser() {
        return user;
    }

    /**
     * Sets the value of the user property.
     * 
     * @param value
     *     allowed object is
     *     {@link User }
     *     
     */
    public void setUser(User value) {
        this.user = value;
    }

    /**
     * Gets the value of the password property.
     * 
     * @return
     *     possible object is
     *     {@link Password }
     *     
     */
    public Password getPassword() {
        return password;
    }

    /**
     * Sets the value of the password property.
     * 
     * @param value
     *     allowed object is
     *     {@link Password }
     *     
     */
    public void setPassword(Password value) {
        this.password = value;
    }

    /**
     * Gets the value of the academicDisciplines property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the academicDisciplines property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAcademicDisciplines().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AcademicDisciplines }
     * 
     * 
     */
    public List<AcademicDisciplines> getAcademicDisciplines() {
        if (academicDisciplines == null) {
            academicDisciplines = new ArrayList<AcademicDisciplines>();
        }
        return this.academicDisciplines;
    }

    public void setAcademicDisciplines(List<AcademicDisciplines> value) {
        this.academicDisciplines = null;
        if (value!= null) {
            List<AcademicDisciplines> draftl = this.getAcademicDisciplines();
            draftl.addAll(value);
        }
    }

}
